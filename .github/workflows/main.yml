name: Build PyWarp Executables (Windows, Linux, macOS)

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Read Version
        id: version
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Nuitka and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r requirements.txt || true
        shell: bash

      - name: Build Executable with Nuitka (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          set VERSION=${{ steps.version.outputs.version }}
          set OUTPUT=pywarp-windows-latest-v%VERSION%
          set NUITKA_DEPENDENCY_SCAN=1

          python -m nuitka ^
            --onefile ^
            --standalone ^
            --nofollow-imports ^
            --remove-output ^
            --disable-console ^
            --enable-plugin=pyside6 ^
            --windows-icon-from-ico=assets/logo.ico ^
            --assume-yes-for-downloads ^
            --output-filename=%OUTPUT% ^
            --product-version=%VERSION% ^
            --file-version=%VERSION% ^
            main.py

      - name: Build Executable with Nuitka (Linux/macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          PLATFORM="${{ matrix.os }}"
          OUTPUT="pywarp-${PLATFORM}-v$VERSION"

          python -m nuitka \
            --onefile \
            --standalone \
            --nofollow-imports \
            --remove-output \
            --disable-console \
            --enable-plugin=pyside6 \
            $( [[ "$PLATFORM" == "macos-latest" ]] && echo "--macos-app-icon=assets/logo.icns" ) \
            --output-filename="$OUTPUT" \
            --product-version="$VERSION" \
            --file-version="$VERSION" \
            main.py

      - name: Set Executable Permissions (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: chmod +x pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}
          path: pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}
