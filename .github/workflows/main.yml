name: Build PyWarp Executables

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Read Version
        id: version
        shell: bash
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"

      - name: Install Python & Nuitka
        run: |
          python -m pip install --upgrade pip
          pip install nuitka pyside6

      - name: Build Executable (Windows)
        shell: pwsh
        run: |
          $version = "${{ steps.version.outputs.version }}"
          $output = "pywarp-windows-v$version.exe"
          $env:NUITKA_DEPENDENCY_SCAN = "1"

          python -m nuitka `
            main.py `
            --standalone `
            --onefile `
            --windows-console-mode=disable `
            --enable-plugin=pyside6 `
            --windows-icon-from-ico=assets/logo.ico `
            --output-filename=$output `
            --windows-company-name="PyWarp" `
            --windows-product-name="PyWarp" `
            --windows-file-version="$version" `
            --windows-product-version="$version"

          if (!(Test-Path $output)) {
            Write-Host "::error::Windows .exe not created"
            exit 1
          }

      - name: Upload Executable (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: pywarp-windows
          path: pywarp-windows-v${{ steps.version.outputs.version }}.exe

  build-linux-macos:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: build-windows
    steps:
      - uses: actions/checkout@v3

      - name: Read Version
        id: version
        shell: bash
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"

      - name: Install Python & Nuitka
        run: |
          python -m pip install --upgrade pip
          pip install nuitka pyside6

      - name: Build Executable (Linux/macOS)
        shell: bash
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          PLATFORM="${{ matrix.os }}"
          OUTPUT="pywarp-${PLATFORM}-v$VERSION"

          ICON=""
          if [[ "$PLATFORM" == "macos-latest" ]]; then
            ICON="--macos-app-icon=assets/logo.icns"
          fi

          python -m nuitka \
            --onefile \
            --standalone \
            --nofollow-imports \
            --remove-output \
            --disable-console \
            --enable-plugin=pyside6 \
            $ICON \
            --output-filename="$OUTPUT" \
            main.py

      - name: Make Executable (Linux/macOS)
        run: chmod +x pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}

      - name: Upload Executable (Linux/macOS)
        uses: actions/upload-artifact@v4
        with:
          name: pywarp-${{ matrix.os }}
          path: pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}
