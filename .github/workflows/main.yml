name: Build PyWarp Executables

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    name: Build PyWarp Windows
    runs-on: windows-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set Up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Read Version
        id: version
        shell: bash
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"

      - name: Install Python & Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka==1.9.5

      - name: Build Executable (Windows)
        shell: pwsh
        run: |
          $version = "${{ steps.version.outputs.version }}"
          $output = "pywarp-windows-v$version.exe"
          $env:NUITKA_DEPENDENCY_SCAN = "1"

          python -m nuitka `
            main.py `
            --standalone `
            --onefile `
            --disable-console `
            --enable-plugin=pyside6 `
            --nofollow-imports `
            --noinclude-pytest-mode=nofollow `
            --noinclude-unittest-mode=nofollow `
            --nofollow-import-to=tkinter,test,pydoc `
            --include-data-dir=assets=assets `
            --include-qt-plugins=all `
            --windows-icon-from-ico=assets/logo.ico `
            --output-dir=dist `
            --output-filename="pywarp-windows-v$version" `
            --windows-company-name="PyWarp" `
            --windows-product-name="PyWarp" `
            --windows-file-version="$version" `
            --windows-product-version="$version" `
            --remove-output `
            --assume-yes-for-downloads

      - name: Zip Executable (Windows)
        run: |
          cd dist
          powershell Compress-Archive -Path pywarp-windows-v${{ steps.version.outputs.version }}.exe -DestinationPath pywarp-windows-v${{ steps.version.outputs.version }}.zip

      - name: Upload ZIP (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: pywarp-windows-v${{ steps.version.outputs.version }}
          path: dist/pywarp-windows-v${{ steps.version.outputs.version }}.zip

  build-linux-macos:
    name: Build PyWarp Linux/macOS
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: build-windows
    steps:
      - uses: actions/checkout@v3

      - name: Set Up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Read Version
        id: version
        shell: bash
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"

      - name: Install Python & Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka==1.9.5

      - name: Build Executable (Linux/macOS)
        shell: bash
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          PLATFORM="${{ matrix.os }}"
          OUTPUT="pywarp-${PLATFORM}-v$VERSION"

          FLAGS="--standalone --onefile --remove-output --disable-console --enable-plugin=pyside6"
          if [[ "$PLATFORM" == "macos-latest" ]]; then
            FLAGS+=" --macos-app-icon=assets/logo.icns --macos-create-app-bundle"
          fi

          python -m nuitka \
            main.py \
            $FLAGS \
            --include-data-dir=assets=assets \
            --output-filename="$OUTPUT"

      - name: Zip Executable (Linux/macOS)
        run: zip pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}.zip pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}

      - name: Upload ZIP (Linux/macOS)
        uses: actions/upload-artifact@v4
        with:
          name: pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}
          path: pywarp-${{ matrix.os }}-v${{ steps.version.outputs.version }}.zip

  release:
    name: Upload ZIPs to Existing Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux-macos]
    steps:
      - uses: actions/checkout@v3

      - name: Read Version
        id: version
        shell: bash
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-zips

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Upload ZIPs to Release
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          TAG="v$VERSION"
          echo "Uploading ZIPs to release $TAG..."

          gh release upload "$TAG" \
            release-zips/pywarp-windows-v$VERSION/pywarp-windows-v$VERSION.zip \
            release-zips/pywarp-ubuntu-latest-v$VERSION/pywarp-ubuntu-latest-v$VERSION.zip \
            release-zips/pywarp-macos-latest-v$VERSION/pywarp-macos-latest-v$VERSION.zip \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
